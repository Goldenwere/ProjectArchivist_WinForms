<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>